@using ZenPharm.Web.Models;
@model AddProductViewModel

@using (Html.BeginForm("register", "admin", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    <div class="pt-3">
        <div class="row justify-content-between mx-3">
            <div class="col-lg-6 form-group">
                @Html.LabelFor(a => a.Product.Name)
                <div class="input-group">
                    @Html.TextBoxFor(a => a.Product.Name, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(a => a.Product.Name, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6 form-group">
                @Html.LabelFor(a => a.Product.Price)
                <div class="input-group">
                    @Html.TextBoxFor(a => a.Product.Price, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(a => a.Product.Price, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6 form-group">
                @Html.LabelFor(a => a.Product.StockQuantity)
                <div class="input-group">
                    @Html.TextBoxFor(a => a.Product.StockQuantity, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(a => a.Product.StockQuantity, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6 form-group">
                @Html.LabelFor(a => a.Product.ExpiryDate)
                <div class="input-group">
                    @Html.TextBoxFor(a => a.Product.ExpiryDate, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(a => a.Product.ExpiryDate, "", new { @class = "text-danger" })
            </div>



            <div class="col-lg-12 form-group">
                @Html.LabelFor(a => a.Product.ProdTypeID)
                <div class="input-group">
                    @Html.DropDownListFor(a => a.Product.ProdTypeID, Model.Types, "-- Select --", new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(a => a.Product.ProdTypeID, "", new { @class = "text-danger" })
            </div>





            <div class="col-lg-12 form-group">
                @Html.LabelFor(a => a.Product.Description)
                <div class="input-group">
                    @Html.TextAreaFor(a => a.Product.Description, new { @class = "form-control", @style = "height:150px;" })
                </div>
                @Html.ValidationMessageFor(a => a.Product.Description, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(a => a.Product.FormFile)
                <div class="input-group">
                    @Html.TextBoxFor(a => a.Product.FormFile, new { @class = "form-control", @type = "file", @accept = "image/*" })
                </div>
                @Html.ValidationMessageFor(a => a.Product.FormFile, "", new { @class = "text-danger" })
            </div>
            <div class="my-3 col-lg-4">
                <input class="btn btn-block btn-danger" type="submit" value="Inregistreaza" style="width:200px;">
            </div>
        </div>
    </div>
}
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}